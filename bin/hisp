#!/usr/bin/env python
import sys
from optparse import OptionParser, make_option

option_list = (
    make_option('-t', '--filetype',
        type='choice', action='store', dest='filetype',
        choices=['xhtml', 'html', 'django'], default=None,
        help='Set the output file type'),
    make_option('-d', '--debug',
        action='store_true', dest='debug', default=False,
        help='Run the parser in debug mode'),
    make_option('-l', '--link',
        action='append', dest='libraries',
        help='Macro libraries to link into hisp'),
    make_option('-o',
        action='store', type='string', dest='outfile', default=False,
        help='The destination for output'),
    make_option('-p', '--path',
        action='store', type='string', dest='path', default=None,
        help="The path to a hisp install, if it's not on the sys path"),
    make_option('-m', '--munge',
        action='store_true', dest='munge',
        help="UNSAFE: Use the hisp install in the directory above this one."),
)


def main():
    parser = OptionParser(
        'hisp filename.hisp [options]',
        option_list=option_list)
    (options, args) = parser.parse_args()

    if options.path:
        sys.path.insert(0, options.path)
    elif options.munge:
        import os
        print ("I'm going to munge your sys.path, "
               "but I'm not making any promises. "
               "If this breaks, it's your fault.")
        path = os.path.dirname(os.path.realpath(os.path.dirname(__file__)))
        sys.path.insert(0, path)

    from hisp.doctypes import HTML, XHTML, DJANGO
    from hisp.exceptions import MacroNotFound, ParseError
    from hisp import Hisp

    if len(args) != 1:
        parser.error('Please give a single file for converson.')
    filename, = args

    filetype = {
        'html': HTML,
        'xhtml': XHTML,
        'django': DJANGO,
    }.get(options.filetype)
    libraries = options.libraries or None
    debug = options.debug
    hisp = Hisp(filetype=filetype, debug=debug, libraries=libraries)

    with open(filename) as source:
        input = source.read()

    try:
        output = hisp.convert(input)
    except (MacroNotFound, ParseError, SyntaxError) as e:
        print e
        return

    if options.outfile:
        with open(options.outfile, 'w') as dest:
            dest.write(output)
    else:
        print output

if __name__ == '__main__':
    main()
